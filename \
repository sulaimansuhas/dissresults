import matplotlib.pyplot as plt
import numpy as np
import os


size_list = [64, 256, 1024, 2048, 4096]
thread_split = [1,2,5,8,10]
norm_latency_dict = {"t1c1":[], "t1c10":[], "t2c10":[], "t5c10":[], "t8c10":[], "t10c10":[], "t1c100":[], "t2c100":[], "t5c100":[], "t8c100":[], "t10c100":[]}
norm_throughput_dict= {"t1c1":[], "t1c10":[], "t2c10":[], "t5c10":[], "t8c10":[], "t10c10":[], "t1c100":[], "t2c100":[], "t5c100":[], "t8c100":[], "t10c100":[]}
dirct = (os.getcwd()) + "/normal-server-1-core"
for i in size_list:
    folder = str(i) + "bytes-tests"
    f = "experiment-d3s"
    for j in ["1", "10", "100"]:
        if j == "1":
            file = open(dirct+"/"+folder+"/"+f+"-t1-c1.txt", "r")
            typ ="t1c1"
            l = (file.readline())
            t = (file.readline())
            l = l.split()
            l = list(map(lambda a : float(a[:-2]), l))
            t = t.split()
            t = list(map(lambda a : float(a), t))
            norm_latency_dict[typ].append(round((sum(l)/len(l)),2))
            norm_throughput_dict[typ].append(round((sum(t)/len(t)),2))
        else:
            for k in thread_split:
                file = open(dirct+"/"+folder+"/"+f+"-t"+ str(k)+"-c"+j+".txt", "r")
                typ ="t"+str(k)+"c"+j
                l = (file.readline())
                t = (file.readline())
                l = l.split()
                l = list(map(lambda a : float(a[:-2]), l))
                t = t.split()
                t =list(map(lambda a : float(a), t))
                norm_latency_dict[typ].append(round((sum(l)/len(l)),2))
                norm_throughput_dict[typ].append(round((sum(t)/len(t)),2))


mtcp_latency_dict = {"t1c1":[], "t1c10":[], "t2c10":[], "t5c10":[], "t8c10":[], "t10c10":[], "t1c100":[], "t2c100":[], "t5c100":[], "t8c100":[], "t10c100":[]}
mtcp_throughput_dict= {"t1c1":[], "t1c10":[], "t2c10":[], "t5c10":[], "t8c10":[], "t10c10":[], "t1c100":[], "t2c100":[], "t5c100":[], "t8c100":[], "t10c100":[]}
dirct = (os.getcwd()) + "/mtcp-server-1-core"
for i in size_list:
    folder = str(i) + "bytes-test"
    f = "experiment-d3s"
    for j in ["1", "10", "100"]:
        if j == "1":
            file = open(dirct+"/"+folder+"/"+f+"-t1-c1.txt", "r")
            typ ="t1c1"
            l = (file.readline())
            t = (file.readline())
            l = l.split()
            l = list(map(lambda a : float(a[:-2]), l))
            t = t.split()
            t = list(map(lambda a : float(a), t))
            mtcp_latency_dict[typ].append(round((sum(l)/len(l)),2))
            mtcp_throughput_dict[typ].append(round((sum(t)/len(t)),2))
        else:
            for k in thread_split:
                file = open(dirct+"/"+folder+"/"+f+"-t"+ str(k)+"-c"+j+".txt", "r")
                typ ="t"+str(k)+"c"+j
                l = (file.readline())
                t = (file.readline())
                l = l.split()
                l = list(map(lambda a : float(a[:-2]), l))
                t = t.split()
                t =list(map(lambda a : float(a), t))
                mtcp_latency_dict[typ].append(round((sum(l)/len(l)),2))
                mtcp_throughput_dict[typ].append(round((sum(t)/len(t)),2))


print(mtcp_latency_dict)
print(mtcp_throughput_dict)

print(norm_latency_dict)
print(norm_throughput_dict)
#
#    file = open("experiment-d3s-t10-c10.txt", "r")
#l = (file.readline())
#t = (file.readline())
#l = l.split()
#t = t.split()
#print(l)
#print(t)
#
#x = np.array(l)
#y = np.array(t)
#fig, ax = plt.subplots()
#ax.plot(x,y)
#plt.show()
